---
format:
  html:
    keep-md: false
    css: ../gallery.css
title: Reception
album: Reception
editor: source
lightbox: auto
---

<!-- :::{.column-page  style="background-image: url('../images/white_wall_hash.webp');"} -->
![](../images/wedding_reception.png){width=67% style="margin-left: auto; margin-right: auto;display: block;" .nolightbox fig-alt='logo'}
<!-- ::: -->

<p align="center">
Please allow 15 seconds for the pictures to load.
</p>
<p align="center" style="margin-bottom: 2px;">
  사진이 나타나기까지 약 15초 정도 소요될 수 있습니다.
</p>
<p align="center" style="margin-top: 2px;">
  잠시만 기다려 주세요.
</p>

::: gallery

::: column-page


```{r, results='asis', echo=FALSE, warning=FALSE, message=FALSE}
library(glue)
library(fs)
library(here)
album = rmarkdown::metadata$album
localurl =  path('../photos/', album)
# photos = fs::dir_ls(path = localurl, glob = '*.jpg')

# List .jpg and .gif files
jpg_files <- fs::dir_ls(path = localurl, glob = '*.jpg')
gif_files <- fs::dir_ls(path = localurl, glob = '*.gif')

# Combine and sort
photos <- sort(c(jpg_files, gif_files))

# baseurl = glue('https://xxxxxxx.cloudfront.net/photos/{album}')
baseurl = localurl
if(file.exists('custom_order')){
reordering = intersect(as.integer(readLines('custom_order')), seq_along(photos))
photos = photos[reordering]
}
  
for (i in seq_along(photos)){
  if(i %in% c(1)) span = 'all' else span = 'none'

  cat(glue('![]({{ baseurl }}/{{ fs::path_file(photos[i]) }}){.lightbox style="column-span: {{ span }};" group="reception"}', .open = '{{', .close = '}}'), '
')

}
```
:::

:::